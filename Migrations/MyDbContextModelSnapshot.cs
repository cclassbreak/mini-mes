// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace mini_mes.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.8");

            modelBuilder.Entity("mini_mes.Model.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DeliveryAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CustomerID");

                    b.HasIndex("CustomerNumber")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("mini_mes.Model.CustomerOrder", b =>
                {
                    b.Property<int>("CustomerOrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("CustomerID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomerOrderNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EstimateShipDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FactoryShipDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderProgress")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.HasKey("CustomerOrderID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("CustomerOrderNumber")
                        .IsUnique();

                    b.ToTable("CustomerOrders");
                });

            modelBuilder.Entity("mini_mes.Model.OrderItem", b =>
                {
                    b.Property<int>("OrderItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerOrderID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RequiredQuantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderItemID");

                    b.HasIndex("CustomerOrderID");

                    b.HasIndex("ProductID");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("mini_mes.Model.Part", b =>
                {
                    b.Property<int>("PartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PartName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PartID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("PartNumber")
                        .IsUnique();

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("mini_mes.Model.ProcessFlow", b =>
                {
                    b.Property<int>("ProcessFlowID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProcessFlowName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProcessFlowNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ProcessFlowID");

                    b.HasIndex("ProcessFlowNumber")
                        .IsUnique();

                    b.ToTable("ProcessFlows");
                });

            modelBuilder.Entity("mini_mes.Model.ProcessStep", b =>
                {
                    b.Property<int>("ProcessStepID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProcessFlowID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProcessStepName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StationID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StepNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProcessStepID");

                    b.HasIndex("ProcessFlowID");

                    b.HasIndex("StationID");

                    b.ToTable("ProcessSteps");
                });

            modelBuilder.Entity("mini_mes.Model.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PartID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProcessFlowID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ProductID");

                    b.HasIndex("PartID");

                    b.HasIndex("ProcessFlowID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("mini_mes.Model.Station", b =>
                {
                    b.Property<int>("StationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("StationName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StationParameter")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("StationID");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("mini_mes.Model.WorkOrder", b =>
                {
                    b.Property<int>("WorkOrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("LotQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderItemID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProducedQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Progress")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WorkOrderNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("WorkOrderID");

                    b.HasIndex("OrderItemID");

                    b.HasIndex("WorkOrderNumber")
                        .IsUnique();

                    b.ToTable("WorkOrders");
                });

            modelBuilder.Entity("mini_mes.Model.CustomerOrder", b =>
                {
                    b.HasOne("mini_mes.Model.Customer", "Customer")
                        .WithMany("CustomerOrders")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("mini_mes.Model.OrderItem", b =>
                {
                    b.HasOne("mini_mes.Model.CustomerOrder", "CustomerOrder")
                        .WithMany("OrderItems")
                        .HasForeignKey("CustomerOrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mini_mes.Model.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerOrder");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("mini_mes.Model.Part", b =>
                {
                    b.HasOne("mini_mes.Model.Customer", "Customer")
                        .WithMany("Parts")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("mini_mes.Model.ProcessStep", b =>
                {
                    b.HasOne("mini_mes.Model.ProcessFlow", "ProcessFlow")
                        .WithMany("ProcessSteps")
                        .HasForeignKey("ProcessFlowID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mini_mes.Model.Station", "Station")
                        .WithMany("ProcessSteps")
                        .HasForeignKey("StationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProcessFlow");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("mini_mes.Model.Product", b =>
                {
                    b.HasOne("mini_mes.Model.Part", "Part")
                        .WithMany("Products")
                        .HasForeignKey("PartID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mini_mes.Model.ProcessFlow", "ProcessFlow")
                        .WithMany("Products")
                        .HasForeignKey("ProcessFlowID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Part");

                    b.Navigation("ProcessFlow");
                });

            modelBuilder.Entity("mini_mes.Model.WorkOrder", b =>
                {
                    b.HasOne("mini_mes.Model.OrderItem", "OrderItem")
                        .WithMany("WorkOrders")
                        .HasForeignKey("OrderItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderItem");
                });

            modelBuilder.Entity("mini_mes.Model.Customer", b =>
                {
                    b.Navigation("CustomerOrders");

                    b.Navigation("Parts");
                });

            modelBuilder.Entity("mini_mes.Model.CustomerOrder", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("mini_mes.Model.OrderItem", b =>
                {
                    b.Navigation("WorkOrders");
                });

            modelBuilder.Entity("mini_mes.Model.Part", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("mini_mes.Model.ProcessFlow", b =>
                {
                    b.Navigation("ProcessSteps");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("mini_mes.Model.Product", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("mini_mes.Model.Station", b =>
                {
                    b.Navigation("ProcessSteps");
                });
#pragma warning restore 612, 618
        }
    }
}
